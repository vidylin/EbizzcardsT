package greendao.autogen.bean;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.gzligo.ebizzcardstranslator.persistence.ChatMessageBean;
import com.gzligo.ebizzcardstranslator.persistence.NewTransOrderBean;
import com.gzligo.ebizzcardstranslator.persistence.NewTravelTransOrderBean;
import com.gzligo.ebizzcardstranslator.persistence.TranslatorSelectedBean;

import greendao.autogen.bean.ChatMessageBeanDao;
import greendao.autogen.bean.NewTransOrderBeanDao;
import greendao.autogen.bean.NewTravelTransOrderBeanDao;
import greendao.autogen.bean.TranslatorSelectedBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig chatMessageBeanDaoConfig;
    private final DaoConfig newTransOrderBeanDaoConfig;
    private final DaoConfig newTravelTransOrderBeanDaoConfig;
    private final DaoConfig translatorSelectedBeanDaoConfig;

    private final ChatMessageBeanDao chatMessageBeanDao;
    private final NewTransOrderBeanDao newTransOrderBeanDao;
    private final NewTravelTransOrderBeanDao newTravelTransOrderBeanDao;
    private final TranslatorSelectedBeanDao translatorSelectedBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        chatMessageBeanDaoConfig = daoConfigMap.get(ChatMessageBeanDao.class).clone();
        chatMessageBeanDaoConfig.initIdentityScope(type);

        newTransOrderBeanDaoConfig = daoConfigMap.get(NewTransOrderBeanDao.class).clone();
        newTransOrderBeanDaoConfig.initIdentityScope(type);

        newTravelTransOrderBeanDaoConfig = daoConfigMap.get(NewTravelTransOrderBeanDao.class).clone();
        newTravelTransOrderBeanDaoConfig.initIdentityScope(type);

        translatorSelectedBeanDaoConfig = daoConfigMap.get(TranslatorSelectedBeanDao.class).clone();
        translatorSelectedBeanDaoConfig.initIdentityScope(type);

        chatMessageBeanDao = new ChatMessageBeanDao(chatMessageBeanDaoConfig, this);
        newTransOrderBeanDao = new NewTransOrderBeanDao(newTransOrderBeanDaoConfig, this);
        newTravelTransOrderBeanDao = new NewTravelTransOrderBeanDao(newTravelTransOrderBeanDaoConfig, this);
        translatorSelectedBeanDao = new TranslatorSelectedBeanDao(translatorSelectedBeanDaoConfig, this);

        registerDao(ChatMessageBean.class, chatMessageBeanDao);
        registerDao(NewTransOrderBean.class, newTransOrderBeanDao);
        registerDao(NewTravelTransOrderBean.class, newTravelTransOrderBeanDao);
        registerDao(TranslatorSelectedBean.class, translatorSelectedBeanDao);
    }
    
    public void clear() {
        chatMessageBeanDaoConfig.clearIdentityScope();
        newTransOrderBeanDaoConfig.clearIdentityScope();
        newTravelTransOrderBeanDaoConfig.clearIdentityScope();
        translatorSelectedBeanDaoConfig.clearIdentityScope();
    }

    public ChatMessageBeanDao getChatMessageBeanDao() {
        return chatMessageBeanDao;
    }

    public NewTransOrderBeanDao getNewTransOrderBeanDao() {
        return newTransOrderBeanDao;
    }

    public NewTravelTransOrderBeanDao getNewTravelTransOrderBeanDao() {
        return newTravelTransOrderBeanDao;
    }

    public TranslatorSelectedBeanDao getTranslatorSelectedBeanDao() {
        return translatorSelectedBeanDao;
    }

}
